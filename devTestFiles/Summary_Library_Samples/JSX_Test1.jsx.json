[
  {
    "summary": {
      "dateCreated": "2024-07-24",
      "timeCreated": "19:51:00",
      "activeWorkspace": "devTestFiles [WSL: Ubuntu-24.04]",
      "filepath": "/home/anar/Projects/Ludwig/devTestFiles/JSX/Test1.jsx",
      "errors": 19,
      "warnings": 10
    },
    "details": [
      {
        "ruleId": "jsx-a11y/alt-text",
        "severity": 2,
        "message": "img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",
        "line": 12,
        "column": 7,
        "endLine": 12,
        "endColumn": 30,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 26,
        "column": 7,
        "endLine": 29,
        "endColumn": 8,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/interactive-supports-focus",
        "severity": 2,
        "message": "Elements with the 'button' interactive role must be tabbable.",
        "line": 26,
        "column": 7,
        "endLine": 29,
        "endColumn": 8,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/aria-activedescendant-has-tabindex",
        "severity": 2,
        "message": "An element that manages focus with `aria-activedescendant` must have a tabindex",
        "line": 33,
        "column": 7,
        "endLine": 33,
        "endColumn": 46,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/aria-props",
        "severity": 2,
        "message": "aria-props: This attribute is an invalid ARIA attribute.",
        "line": 37,
        "column": 9,
        "endLine": 37,
        "endColumn": 31,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-proptypes",
        "severity": 2,
        "message": "The value for aria-checked must be a boolean or the string \"mixed\".",
        "line": 40,
        "column": 12,
        "endLine": 40,
        "endColumn": 34,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-role",
        "severity": 2,
        "message": "Elements with ARIA roles must use a valid, non-abstract ARIA role.",
        "line": 42,
        "column": 12,
        "endLine": 42,
        "endColumn": 26,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/aria-unsupported-elements",
        "severity": 2,
        "message": "This element does not support ARIA roles, states and properties. Try removing the prop 'aria-hidden'.",
        "line": 44,
        "column": 7,
        "endLine": 44,
        "endColumn": 34,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 46,
        "column": 7,
        "endLine": 46,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 46,
        "column": 7,
        "endLine": 46,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/heading-has-content",
        "severity": 2,
        "message": "Headings must have content and the content must be accessible by a screen reader.",
        "line": 48,
        "column": 7,
        "endLine": 48,
        "endColumn": 13,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 50,
        "column": 7,
        "endLine": 50,
        "endColumn": 15,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/label-has-associated-control",
        "severity": 2,
        "message": "A form label must be associated with a control.",
        "line": 56,
        "column": 7,
        "endLine": 56,
        "endColumn": 14,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 58,
        "column": 7,
        "endLine": 58,
        "endColumn": 23,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/media-has-caption",
        "severity": 2,
        "message": "Media elements such as <audio> and <video> must have a <track> for captions.",
        "line": 60,
        "column": 7,
        "endLine": 60,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/no-access-key",
        "severity": 1,
        "message": "No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screenreaders and keyboard-only users create a11y complications.",
        "line": 64,
        "column": 7,
        "endLine": 64,
        "endColumn": 28,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/no-autofocus",
        "severity": 1,
        "message": "The autoFocus prop should not be used, as it can reduce usability and accessibility for users.",
        "line": 66,
        "column": 14,
        "endLine": 66,
        "endColumn": 23,
        "nodeType": "JSXAttribute",
        "customSeverity": 4
      },
      {
        "ruleId": "jsx-a11y/no-distracting-elements",
        "severity": 1,
        "message": "Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.",
        "line": 68,
        "column": 7,
        "endLine": 68,
        "endColumn": 16,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 72,
        "column": 7,
        "endLine": 72,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 72,
        "column": 7,
        "endLine": 72,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-noninteractive-tabindex",
        "severity": 1,
        "message": "`tabIndex` should only be declared on interactive elements.",
        "line": 76,
        "column": 12,
        "endLine": 76,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-onchange",
        "severity": 1,
        "message": "onBlur must be used instead of onchange, unless absolutely necessary and it causes no negative consequences for keyboard only or screen reader users.",
        "line": 78,
        "column": 7,
        "endLine": 78,
        "endColumn": 37,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 4
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 82,
        "column": 7,
        "endLine": 82,
        "endColumn": 33,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 82,
        "column": 7,
        "endLine": 82,
        "endColumn": 33,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/role-has-required-aria-props",
        "severity": 2,
        "message": "Elements with the ARIA role \"switch\" must have the following attributes defined: aria-checked",
        "line": 84,
        "column": 14,
        "endLine": 84,
        "endColumn": 27,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/role-supports-aria-props",
        "severity": 2,
        "message": "The attribute aria-level is not supported by the role checkbox.",
        "line": 86,
        "column": 7,
        "endLine": 89,
        "endColumn": 9,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/role-has-required-aria-props",
        "severity": 2,
        "message": "Elements with the ARIA role \"checkbox\" must have the following attributes defined: aria-checked",
        "line": 87,
        "column": 9,
        "endLine": 87,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/no-noninteractive-tabindex",
        "severity": 1,
        "message": "`tabIndex` should only be declared on interactive elements.",
        "line": 93,
        "column": 12,
        "endLine": 93,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/tabindex-no-positive",
        "severity": 1,
        "message": "Avoid positive integer values for tabIndex.",
        "line": 93,
        "column": 12,
        "endLine": 93,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      }
    ],
    "hash": "6a35937c"
  },
  {
    "summary": {
      "dateCreated": "2024-07-24",
      "timeCreated": "19:53:08",
      "activeWorkspace": "devTestFiles [WSL: Ubuntu-24.04]",
      "filepath": "/home/anar/Projects/Ludwig/devTestFiles/JSX/Test1.jsx",
      "errors": 18,
      "warnings": 7
    },
    "details": [
      {
        "ruleId": "jsx-a11y/alt-text",
        "severity": 2,
        "message": "img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",
        "line": 12,
        "column": 7,
        "endLine": 12,
        "endColumn": 30,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 23,
        "column": 7,
        "endLine": 23,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/interactive-supports-focus",
        "severity": 2,
        "message": "Elements with the 'button' interactive role must be tabbable.",
        "line": 23,
        "column": 7,
        "endLine": 23,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/aria-activedescendant-has-tabindex",
        "severity": 2,
        "message": "An element that manages focus with `aria-activedescendant` must have a tabindex",
        "line": 27,
        "column": 7,
        "endLine": 27,
        "endColumn": 46,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/aria-props",
        "severity": 2,
        "message": "aria-props: This attribute is an invalid ARIA attribute.",
        "line": 29,
        "column": 31,
        "endLine": 29,
        "endColumn": 53,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-proptypes",
        "severity": 2,
        "message": "The value for aria-checked must be a boolean or the string \"mixed\".",
        "line": 31,
        "column": 12,
        "endLine": 31,
        "endColumn": 34,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-role",
        "severity": 2,
        "message": "Elements with ARIA roles must use a valid, non-abstract ARIA role.",
        "line": 33,
        "column": 12,
        "endLine": 33,
        "endColumn": 26,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/aria-unsupported-elements",
        "severity": 2,
        "message": "This element does not support ARIA roles, states and properties. Try removing the prop 'aria-hidden'.",
        "line": 35,
        "column": 7,
        "endLine": 35,
        "endColumn": 34,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 37,
        "column": 7,
        "endLine": 37,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 37,
        "column": 7,
        "endLine": 37,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/heading-has-content",
        "severity": 2,
        "message": "Headings must have content and the content must be accessible by a screen reader.",
        "line": 39,
        "column": 7,
        "endLine": 39,
        "endColumn": 13,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 41,
        "column": 7,
        "endLine": 41,
        "endColumn": 15,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/label-has-associated-control",
        "severity": 2,
        "message": "A form label must be associated with a control.",
        "line": 47,
        "column": 7,
        "endLine": 47,
        "endColumn": 14,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 49,
        "column": 7,
        "endLine": 49,
        "endColumn": 23,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/media-has-caption",
        "severity": 2,
        "message": "Media elements such as <audio> and <video> must have a <track> for captions.",
        "line": 51,
        "column": 7,
        "endLine": 51,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/no-access-key",
        "severity": 1,
        "message": "No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screenreaders and keyboard-only users create a11y complications.",
        "line": 55,
        "column": 7,
        "endLine": 55,
        "endColumn": 28,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/no-autofocus",
        "severity": 1,
        "message": "The autoFocus prop should not be used, as it can reduce usability and accessibility for users.",
        "line": 57,
        "column": 14,
        "endLine": 57,
        "endColumn": 23,
        "nodeType": "JSXAttribute",
        "customSeverity": 4
      },
      {
        "ruleId": "jsx-a11y/no-distracting-elements",
        "severity": 1,
        "message": "Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.",
        "line": 59,
        "column": 7,
        "endLine": 59,
        "endColumn": 16,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 64,
        "column": 7,
        "endLine": 64,
        "endColumn": 33,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 64,
        "column": 7,
        "endLine": 64,
        "endColumn": 33,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/role-has-required-aria-props",
        "severity": 2,
        "message": "Elements with the ARIA role \"switch\" must have the following attributes defined: aria-checked",
        "line": 66,
        "column": 14,
        "endLine": 66,
        "endColumn": 27,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/role-supports-aria-props",
        "severity": 2,
        "message": "The attribute aria-level is not supported by the role checkbox.",
        "line": 68,
        "column": 7,
        "endLine": 68,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/role-has-required-aria-props",
        "severity": 2,
        "message": "Elements with the ARIA role \"checkbox\" must have the following attributes defined: aria-checked",
        "line": 68,
        "column": 12,
        "endLine": 68,
        "endColumn": 27,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/no-noninteractive-tabindex",
        "severity": 1,
        "message": "`tabIndex` should only be declared on interactive elements.",
        "line": 72,
        "column": 12,
        "endLine": 72,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/tabindex-no-positive",
        "severity": 1,
        "message": "Avoid positive integer values for tabIndex.",
        "line": 72,
        "column": 12,
        "endLine": 72,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      }
    ],
    "hash": "1f794bea"
  },
  {
    "summary": {
      "dateCreated": "2024-07-24",
      "timeCreated": "19:53:12",
      "activeWorkspace": "devTestFiles [WSL: Ubuntu-24.04]",
      "filepath": "/home/anar/Projects/Ludwig/devTestFiles/JSX/Test1.jsx",
      "errors": 14,
      "warnings": 6
    },
    "details": [
      {
        "ruleId": "jsx-a11y/alt-text",
        "severity": 2,
        "message": "img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",
        "line": 12,
        "column": 7,
        "endLine": 12,
        "endColumn": 30,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 23,
        "column": 7,
        "endLine": 23,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/interactive-supports-focus",
        "severity": 2,
        "message": "Elements with the 'button' interactive role must be tabbable.",
        "line": 23,
        "column": 7,
        "endLine": 23,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/aria-activedescendant-has-tabindex",
        "severity": 2,
        "message": "An element that manages focus with `aria-activedescendant` must have a tabindex",
        "line": 27,
        "column": 7,
        "endLine": 27,
        "endColumn": 46,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/aria-props",
        "severity": 2,
        "message": "aria-props: This attribute is an invalid ARIA attribute.",
        "line": 29,
        "column": 31,
        "endLine": 29,
        "endColumn": 53,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-proptypes",
        "severity": 2,
        "message": "The value for aria-checked must be a boolean or the string \"mixed\".",
        "line": 31,
        "column": 12,
        "endLine": 31,
        "endColumn": 34,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-role",
        "severity": 2,
        "message": "Elements with ARIA roles must use a valid, non-abstract ARIA role.",
        "line": 33,
        "column": 12,
        "endLine": 33,
        "endColumn": 26,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/aria-unsupported-elements",
        "severity": 2,
        "message": "This element does not support ARIA roles, states and properties. Try removing the prop 'aria-hidden'.",
        "line": 35,
        "column": 7,
        "endLine": 35,
        "endColumn": 34,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 37,
        "column": 7,
        "endLine": 37,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 37,
        "column": 7,
        "endLine": 37,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/heading-has-content",
        "severity": 2,
        "message": "Headings must have content and the content must be accessible by a screen reader.",
        "line": 39,
        "column": 7,
        "endLine": 39,
        "endColumn": 13,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 41,
        "column": 7,
        "endLine": 41,
        "endColumn": 15,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/label-has-associated-control",
        "severity": 2,
        "message": "A form label must be associated with a control.",
        "line": 47,
        "column": 7,
        "endLine": 47,
        "endColumn": 14,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 49,
        "column": 7,
        "endLine": 49,
        "endColumn": 23,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/media-has-caption",
        "severity": 2,
        "message": "Media elements such as <audio> and <video> must have a <track> for captions.",
        "line": 51,
        "column": 7,
        "endLine": 51,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/no-access-key",
        "severity": 1,
        "message": "No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screenreaders and keyboard-only users create a11y complications.",
        "line": 55,
        "column": 7,
        "endLine": 55,
        "endColumn": 28,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/no-autofocus",
        "severity": 1,
        "message": "The autoFocus prop should not be used, as it can reduce usability and accessibility for users.",
        "line": 57,
        "column": 14,
        "endLine": 57,
        "endColumn": 23,
        "nodeType": "JSXAttribute",
        "customSeverity": 4
      },
      {
        "ruleId": "jsx-a11y/no-distracting-elements",
        "severity": 1,
        "message": "Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.",
        "line": 59,
        "column": 7,
        "endLine": 59,
        "endColumn": 16,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-noninteractive-tabindex",
        "severity": 1,
        "message": "`tabIndex` should only be declared on interactive elements.",
        "line": 64,
        "column": 12,
        "endLine": 64,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/tabindex-no-positive",
        "severity": 1,
        "message": "Avoid positive integer values for tabIndex.",
        "line": 64,
        "column": 12,
        "endLine": 64,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      }
    ],
    "hash": "3dec79e8"
  },
  {
    "summary": {
      "dateCreated": "2024-07-24",
      "timeCreated": "19:53:16",
      "activeWorkspace": "devTestFiles [WSL: Ubuntu-24.04]",
      "filepath": "/home/anar/Projects/Ludwig/devTestFiles/JSX/Test1.jsx",
      "errors": 19,
      "warnings": 10
    },
    "details": [
      {
        "ruleId": "jsx-a11y/alt-text",
        "severity": 2,
        "message": "img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",
        "line": 12,
        "column": 7,
        "endLine": 12,
        "endColumn": 30,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 23,
        "column": 7,
        "endLine": 23,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/interactive-supports-focus",
        "severity": 2,
        "message": "Elements with the 'button' interactive role must be tabbable.",
        "line": 23,
        "column": 7,
        "endLine": 23,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 10
      },
      {
        "ruleId": "jsx-a11y/aria-activedescendant-has-tabindex",
        "severity": 2,
        "message": "An element that manages focus with `aria-activedescendant` must have a tabindex",
        "line": 27,
        "column": 7,
        "endLine": 27,
        "endColumn": 46,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/aria-props",
        "severity": 2,
        "message": "aria-props: This attribute is an invalid ARIA attribute.",
        "line": 29,
        "column": 31,
        "endLine": 29,
        "endColumn": 53,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-proptypes",
        "severity": 2,
        "message": "The value for aria-checked must be a boolean or the string \"mixed\".",
        "line": 31,
        "column": 12,
        "endLine": 31,
        "endColumn": 34,
        "nodeType": "JSXAttribute",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/aria-role",
        "severity": 2,
        "message": "Elements with ARIA roles must use a valid, non-abstract ARIA role.",
        "line": 33,
        "column": 12,
        "endLine": 33,
        "endColumn": 26,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/aria-unsupported-elements",
        "severity": 2,
        "message": "This element does not support ARIA roles, states and properties. Try removing the prop 'aria-hidden'.",
        "line": 35,
        "column": 7,
        "endLine": 35,
        "endColumn": 34,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 37,
        "column": 7,
        "endLine": 37,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 37,
        "column": 7,
        "endLine": 37,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/heading-has-content",
        "severity": 2,
        "message": "Headings must have content and the content must be accessible by a screen reader.",
        "line": 39,
        "column": 7,
        "endLine": 39,
        "endColumn": 13,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 41,
        "column": 7,
        "endLine": 41,
        "endColumn": 15,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/label-has-associated-control",
        "severity": 2,
        "message": "A form label must be associated with a control.",
        "line": 47,
        "column": 7,
        "endLine": 47,
        "endColumn": 14,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/html-has-lang",
        "severity": 2,
        "message": "<html> elements must have the lang prop.",
        "line": 49,
        "column": 7,
        "endLine": 49,
        "endColumn": 23,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/media-has-caption",
        "severity": 2,
        "message": "Media elements such as <audio> and <video> must have a <track> for captions.",
        "line": 51,
        "column": 7,
        "endLine": 51,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 9
      },
      {
        "ruleId": "jsx-a11y/no-access-key",
        "severity": 1,
        "message": "No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screenreaders and keyboard-only users create a11y complications.",
        "line": 55,
        "column": 7,
        "endLine": 55,
        "endColumn": 28,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 5
      },
      {
        "ruleId": "jsx-a11y/no-autofocus",
        "severity": 1,
        "message": "The autoFocus prop should not be used, as it can reduce usability and accessibility for users.",
        "line": 57,
        "column": 14,
        "endLine": 57,
        "endColumn": 23,
        "nodeType": "JSXAttribute",
        "customSeverity": 4
      },
      {
        "ruleId": "jsx-a11y/no-distracting-elements",
        "severity": 1,
        "message": "Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.",
        "line": 59,
        "column": 7,
        "endLine": 59,
        "endColumn": 16,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 63,
        "column": 7,
        "endLine": 63,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 63,
        "column": 7,
        "endLine": 63,
        "endColumn": 32,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-noninteractive-tabindex",
        "severity": 1,
        "message": "`tabIndex` should only be declared on interactive elements.",
        "line": 67,
        "column": 12,
        "endLine": 67,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-onchange",
        "severity": 1,
        "message": "onBlur must be used instead of onchange, unless absolutely necessary and it causes no negative consequences for keyboard only or screen reader users.",
        "line": 69,
        "column": 7,
        "endLine": 69,
        "endColumn": 37,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 4
      },
      {
        "ruleId": "jsx-a11y/click-events-have-key-events",
        "severity": 2,
        "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
        "line": 73,
        "column": 7,
        "endLine": 73,
        "endColumn": 33,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/no-static-element-interactions",
        "severity": 1,
        "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
        "line": 73,
        "column": 7,
        "endLine": 73,
        "endColumn": 33,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/role-has-required-aria-props",
        "severity": 2,
        "message": "Elements with the ARIA role \"switch\" must have the following attributes defined: aria-checked",
        "line": 75,
        "column": 14,
        "endLine": 75,
        "endColumn": 27,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/role-supports-aria-props",
        "severity": 2,
        "message": "The attribute aria-level is not supported by the role checkbox.",
        "line": 77,
        "column": 7,
        "endLine": 77,
        "endColumn": 45,
        "nodeType": "JSXOpeningElement",
        "customSeverity": 7
      },
      {
        "ruleId": "jsx-a11y/role-has-required-aria-props",
        "severity": 2,
        "message": "Elements with the ARIA role \"checkbox\" must have the following attributes defined: aria-checked",
        "line": 77,
        "column": 12,
        "endLine": 77,
        "endColumn": 27,
        "nodeType": "JSXAttribute",
        "customSeverity": 8
      },
      {
        "ruleId": "jsx-a11y/no-noninteractive-tabindex",
        "severity": 1,
        "message": "`tabIndex` should only be declared on interactive elements.",
        "line": 81,
        "column": 12,
        "endLine": 81,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      },
      {
        "ruleId": "jsx-a11y/tabindex-no-positive",
        "severity": 1,
        "message": "Avoid positive integer values for tabIndex.",
        "line": 81,
        "column": 12,
        "endLine": 81,
        "endColumn": 24,
        "nodeType": "JSXAttribute",
        "customSeverity": 6
      }
    ],
    "hash": "6a35937c"
  }
]